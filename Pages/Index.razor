@page "/"

<PageTitle>Index</PageTitle>

<div class="container">
    <div class="card text-center">
        <div class="card-body">
            <h1 class="card-title">@wordToGuess</h1>
            <div class="card-text">
                @foreach (var word in words)
                {
                    <div class="word">@word</div>
                }
            </div>
            <button class="btn btn-primary mt-3" @onclick="NextWord">New word</button>
        </div>
    </div>
</div>
<style>
    .container {
        margin: 50px auto;
        max-width: 500px;
    }
    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    }
    .card-title {
        font-size: 3rem;
        font-weight: bold;
        margin-bottom: 1rem;
    }
    .word {
        display: inline-block;
        background-color: #f2f2f2;
        border-radius: 20px;
        padding: 5px 10px;
        margin: 5px;
        font-size: 1.2rem;
    }
    .btn {
        border-radius: 20px;
        padding: 10px 20px;
        font-size: 1.2rem;
    }
</style>


@code
{
    string csv = "data/words_data.csv";
    string wordToGuess;
    string[] words;
    Random random = new();


    protected override void OnInitialized()
    {
        NextWord();
    }

    private void NextWord()
    {
        using var reader = new StreamReader(csv);
        int numberOfLines = NumberOfLines(reader);
        int lineNumber = random.Next(0, numberOfLines);
        for (int i = 0; i < lineNumber; i++)
        {
            reader.ReadLine();
        }
        string line = reader.ReadLine();
        string[] values = line.Split(',');
        ToPascalCase(values);
        wordToGuess = values[0];
        words = values.Skip(1).ToArray();
    }

    private int NumberOfLines(StreamReader reader)
    {
        var lineCount = 0;
        while (reader.ReadLine() != null)
        {
            lineCount++;
        }
        reader.BaseStream.Seek(0, SeekOrigin.Begin);
        return lineCount;
    }

    private static void ToPascalCase(string[] values)
    {
        for (int i = 0; i < values.Length; i++)
        {
            char firstLetter = char.ToUpper(values[i][0]);
            values[i] = firstLetter + values[i][1..];
        }
    }
}